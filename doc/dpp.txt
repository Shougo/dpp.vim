*dpp.txt*	Dark powered plugin manager for Vim/neovim

Author: Shougo <Shougo.Matsu at gmail.com>
License: MIT license

CONTENTS                                                        *dpp-contents*

Introduction		|dpp-introduction|
Install			|dpp-install|
Interface		|dpp-interface|
  Options		  |dpp-options|
  Functions		  |dpp-functions|
Examples		|dpp-examples|
Exts			|dpp-exts|
  Ext option	          |dpp-ext-options|
  Ext params	          |dpp-ext-params|
Protocols		|dpp-protocols|
  Protocol option	  |dpp-protocol-options|
  Protocol params	  |dpp-protocol-params|
Create Ext		|dpp-create-ext|
  Ext attributes	  |dpp-ext-attributes|
Create Protocol		|dpp-create-protocol|
  Protocol attributes	  |dpp-protocol-attributes|
FAQ			|dpp-faq|
Compatibility		|dpp-compatibility|


==============================================================================
INTRODUCTION                                                *dpp-introduction*

*dpp* is the abbreviation of "Dark Powered Plugin manager".  It provides
extensible plugin manager features.

If you don't want to configure plugins, you don't have to use the plugin.
It does not work with zero configuration.  You can use other plugins.


==============================================================================
INSTALL                                                          *dpp-install*

NOTE: dpp.vim requires Neovim (0.10.0+) or Vim 9.0.1276+ (latest is
recommended).

Please install both Deno and "denops.vim".

https://deno.land/
https://github.com/vim-denops/denops.vim

NOTE: dpp.vim does not include any extensions.
You must install them you want manually.
You can search dpp.vim plugins from https://github.com/topics/dpp-vim.


==============================================================================
INTERFACE                                                      *dpp-interface*

------------------------------------------------------------------------------
OPTIONS                                                          *dpp-options*

                                                       *dpp-option-extOptions*
extOptions		(dictionary)
		It is a dictionary that maps ext names to its options.
		The options with the name "_" is used as the options for all
		names.
		See also |dpp-ext-options|.

		Default: {}

                                                        *dpp-option-extParams*
extParams		(dictionary)
		It is a dictionary that maps ext names to its parameters.
		See also |dpp-ext-params|.

		Default: {}

                                                     *dpp-option-inlineVimrcs*
inlineVimrcs		(string[])
		The vimrcs are sourced in |dpp#min#load_state()| before hooks.
		NOTE: It must be set before |dpp#make_state()|.
		NOTE: The files must not be included "<<" pattern(here
		document).  It breaks the parser.
		NOTE: It also supports ".lua" file for neovim.

		Defaults: []

                                                  *dpp-option-protocolOptions*
protocolOptions		(dictionary)
		It is a dictionary that maps protocol names to its options.
		The options with the name "_" is used as the options for all
		names.
		See also |dpp-protocol-options|.

		Default: {}

                                                   *dpp-option-protocolParams*
protocolParams		(dictionary)
		It is a dictionary that maps protocol names to its parameters.
		See also |dpp-protocol-params|.

		Default: {}

------------------------------------------------------------------------------
FUNCTIONS                                                      *dpp-functions*

                                                                   *dpp#get()*
dpp#get([{name}])
		Get the plugin options dictionary for {plugin-name}.
		If you omit {plugin-name}, dpp will return the plugins
		dictionary.  The key is the plugin name.  The value is the
		plugin dictionary.

                                                            *dpp#make_state()*
dpp#make_state({base-path}, {config-path})
		Save dpp's state in the cache script.
		It must be after |DenopsReady|.
		{base-path} is where your downloaded plugins will be placed.
		{config-path} is TypeScript configuration file to make state.
		NOTE: It saves your 'runtimepath' completely, you must not
		call it after change 'runtimepath' dynamically.

                                                        *dpp#min#load_state()*
dpp#min#load_state({base-path})
		Load dpp's state from the cache script, {base-path} is where
		your downloaded plugins will be placed.
		NOTE: It overwrites your 'runtimepath' completely, you must
		not call it after change 'runtimepath' dynamically.
		NOTE: The block is skipped if dpp's state is loaded.

		It returns 1, if the cache script is old or invalid or not
		found.
                                                                *dpp#source()*
dpp#source([{name}])
		|:source|  the plugins specified by {plugins}.
		{plugins} is the plugins name list.
		If you omit it, dpp will source all plugins.
		It returns sourced plugins list.

==============================================================================
EXAMPLES                                                        *dpp-examples*
>
	" Ward off unexpected things that your distro might have made, as
	" well as sanely reset options when re-sourcing .vimrc
	set nocompatible
	
	" Set dpp base path (required)
	const s:dpp_base = '~/.cache/dpp/'
	
	" Set dpp source path (required)
	const s:dpp_src = '~/.cache/dpp/repos/github.com/Shougo/dpp.vim'
	const s:denops_src = '~/.cache/dpp/repos/github.com/denops/denops.vim'
	
	" Set dpp runtime path (required)
	execute 'set runtimepath^=' .. s:dpp_src
	
	if dpp#min#load_state(s:dpp_base)
	  " NOTE: dpp#make_state() requires denops.vim
	  execute 'set runtimepath^=' .. s:denops_src
	  autocmd User DenopsReady
	  \ call dpp#make_state(s:dpp_base, '{your script path}')
	endif
	
	" Attempt to determine the type of a file based on its name and
	" possibly its " contents. Use this to allow intelligent
	" auto-indenting " for each filetype, and for plugins that are
	" filetype specific.
	filetype indent plugin on
	
	" Enable syntax highlighting
	if has('syntax')
	  syntax on
	endif
<

==============================================================================
EXTS                                                                *dpp-exts*

NOTE: The Exts are not bundled in dpp.vim.  You need to install them
to use dpp.vim.  Please search them by https://github.com/topics/dpp-ext


------------------------------------------------------------------------------
EXT OPTIONS                                                  *dpp-ext-options*

NOTE: The Exts cannot set default options.  If they need to specify the
recommended configuration, you should write it in the documentation instead.


------------------------------------------------------------------------------
EXT PARAMS                                                    *dpp-ext-params*

These are the parameters that each Ext can have.  Please read the Ext
documentation.


==============================================================================
PROTOCOLS                                                      *dpp-protocols*

NOTE: The Protocols are not bundled in dpp.vim.  You need to install them
to use dpp.vim.  Please search them by https://github.com/topics/dpp-protocol


------------------------------------------------------------------------------
PROTOCOL OPTIONS                                        *dpp-protocol-options*

NOTE: The Protocols cannot set default options.  If they need to specify the
recommended configuration, you should write it in the documentation instead.

------------------------------------------------------------------------------
PROTOCOL PARAMS                                          *dpp-protocol-params*

These are the parameters that each Protocol can have.  Please read the
Protocol documentation.


==============================================================================
CREATE EXT                                                    *dpp-create-ext*

To create ext, you should read other exts implementation.

The ext must put under "denops/@dpp-exts/*.ts".

The ext class must extend the "BaseExt" class.

NOTE: It must be written in TypeScript language.

NOTE: If you call Vim functions, it is not asynchronous.


------------------------------------------------------------------------------
EXT ATTRIBUTES                                            *dpp-ext-attributes*

                                                   *dpp-ext-attribute-actions*
actions			(Record<string, function>)	(Required)
		Defines ext specific actions.

                                                    *dpp-ext-attribute-onInit*
onInit			(function)			(Optional)
		Called before call ext functions.

                                                    *dpp-ext-attribute-params*
params			(function)			(Required)
		Called to get ext params.


==============================================================================
CREATE PROTOCOL                                          *dpp-create-protocol*

To create protocol, you should read other protocols implementation.

The protocol must put under "denops/@dpp-protocols/*.ts".

The protocol class must extend the "BaseProtocol" class.

NOTE: It must be written in TypeScript language.

NOTE: If you call Vim functions, it is not asynchronous.


------------------------------------------------------------------------------
PROTOCOL ATTRIBUTES                                  *dpp-protocol-attributes*

                                               *dpp-protocol-attribute-onInit*
onInit			(function)			(Optional)
		Called before call protocol functions.

                                               *dpp-protocol-attribute-params*
params			(function)			(Required)
		Called to get protocol params.


==============================================================================
FAQ                                                                  *dpp-faq*

------------------------------------------------------------------------------
                                                                   *dpp-faq-1*

==============================================================================
COMPATIBILITY                                              *dpp-compatibility*

==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:noet:
